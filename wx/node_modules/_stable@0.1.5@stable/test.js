function cmp(e,t){return e===t?0:e>t?1:-1}function gt(e,t){return e>t}function diff(e,t){return e-t}function objCmp(e,t){return e.x>t.x}var test=require("tape"),stable=require("node_modules/_stable@0.1.5@stable/stable.js");test("always returns a new array",function(e){var t;t=[],e.doesNotEqual(t,stable(t)),t=[1],e.doesNotEqual(t,stable(t)),t=[1,2],e.doesNotEqual(t,stable(t)),e.end()}),test("in-place always returns the same array",function(e){var t;t=[],e.equal(t,stable.inplace(t)),t=[1],e.equal(t,stable.inplace(t)),t=[1,2],e.equal(t,stable.inplace(t)),e.end()}),test("basic sorting",function(e){e.same(stable(["foo","bar","baz"]),["bar","baz","foo"]),e.same(stable([9,2,10,5,4,3,0,1,8,6,7]),[0,1,10,2,3,4,5,6,7,8,9]),e.end()}),test("comparators",function(e){e.same(stable([9,2,10,5,4,3,0,1,8,6,7],cmp),[0,1,2,3,4,5,6,7,8,9,10]),e.same(stable([9,2,10,5,4,3,0,1,8,6,7],gt),[0,1,2,3,4,5,6,7,8,9,10]),e.same(stable([9,2,10,5,4,3,0,1,8,6,7],diff),[0,1,2,3,4,5,6,7,8,9,10]),e.same(stable([{x:4},{x:3},{x:5}],objCmp),[{x:3},{x:4},{x:5}]),e.end()}),test("stable sorting",function(e){function t(e,t){return e.x>t.x}e.same(stable([{x:3,y:1},{x:4,y:2},{x:3,y:3},{x:5,y:4},{x:3,y:5}],t),[{x:3,y:1},{x:3,y:3},{x:3,y:5},{x:4,y:2},{x:5,y:4}]),e.end()});